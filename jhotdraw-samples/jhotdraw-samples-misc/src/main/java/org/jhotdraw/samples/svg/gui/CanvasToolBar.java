/*
 * @(#)CanvasToolBar.java
 *
 * Copyright (c) 2007-2008 The authors and contributors of JHotDraw.
 * You may not use, copy or modify this file, except in compliance with the
 * accompanying license terms.
 */
package org.jhotdraw.samples.svg.gui;

import dk.sdu.mmmi.featuretracer.lib.FeatureEntryPoint;

import java.util.HashMap;
import javax.swing.*;

import org.jhotdraw.util.*;

/**
 * CanvasToolBar.
 *
 * @author Werner Randelshofer
 * @version $Id$
 */
public class CanvasToolBar extends AbstractToolBar {

    private static final long serialVersionUID = 1L;

    /**
     * Creates new instance.
     */

    @FeatureEntryPoint(value = "canvasToolBar")
    public CanvasToolBar(HashMap<Integer, StateStrategy> stateStrategyMap) {
        super(stateStrategyMap);
        ResourceBundleUtil labels = ResourceBundleUtil.getBundle(
                "org.jhotdraw.samples.svg.Labels");
        setName(labels.getString(getID() + ".toolbar"));
        setDisclosureStateCount(3);
    }
    @FeatureEntryPoint(value = "createDisclosedComponent")
    @Override
    protected JComponent createDisclosedComponent(int state) {
        return stateStrategyMap.get(state).initDisclosedComponent(editor,disposables);
    }

    @Override
    protected String getID() {
        return "canvas";
    }

    /**
     * This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        setOpaque(false);
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
